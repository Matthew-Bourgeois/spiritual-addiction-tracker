{"version":3,"sources":["pages/Home.js","pages/About.js","pages/NewTaskForm.js","pages/FilterButtons.js","pages/TaskItem.js","pages/TaskList.js","pages/Todo.js","pages/Contact.js","pages/SevenDeadlySins.js","pages/SinLog.js","App.js","reportWebVitals.js","index.js"],"names":["Home","logs","setLogs","useState","lastLog","setLastLog","currentStreak","setCurrentStreak","bestStreak","setBestStreak","useEffect","storedLogs","JSON","parse","localStorage","getItem","length","tempStreak","i","overcame","Math","max","getStreaks","React","createElement","style","maxWidth","margin","textAlign","backgroundColor","padding","borderRadius","marginBottom","date","sin","journal","color","verse","Link","to","About","boxShadow","lineHeight","fontSize","paddingLeft","fontStyle","fontWeight","NewTaskForm","_ref","taskInput","setTaskInput","addTask","placeholder","onSubmit","type","value","onChange","e","target","FilterButtons","filter","setFilter","onClick","disabled","TaskItem","task","toggleTaskCompletion","deleteTask","textDecoration","completed","cursor","id","text","marginLeft","TaskList","tasks","map","key","Todo","goals","setGoals","saved","setItem","stringify","goalInput","setGoalInput","filteredGoals","goal","className","preventDefault","trim","Date","now","verseMap","lust","keywords","pride","envy","wrath","greed","sloth","gluttony","fear","anxiety","doubt","Contact","message","setMessage","setVerse","loweredMessage","toLowerCase","found","topic","matchedVerse","some","keyword","includes","rows","required","width","marginTop","initialSins","name","isOvercome","SevenDeadlySins","navigate","useNavigate","sins","setSins","showVerse","setShowVerse","Array","fill","listStyle","index","updated","toggleOvercome","toggleVerse","sinVerses","Pride","Envy","Wrath","Lust","Gluttony","Greed","Sloth","SinLog","setSin","setJournal","setOvercame","newLog","toLocaleDateString","Object","keys","checked","log","borderBottom","paddingBottom","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0f6f1a72.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst getStreaks = (logs) => {\r\n  let currentStreak = 0;\r\n  let bestStreak = 0;\r\n  let tempStreak = 0;\r\n\r\n  for (let i = 0; i < logs.length; i++) {\r\n    if (logs[i].overcame) {\r\n      tempStreak++;\r\n      if (i === 0) currentStreak++;\r\n      bestStreak = Math.max(bestStreak, tempStreak);\r\n    } else {\r\n      if (i === 0) currentStreak = 0;\r\n      tempStreak = 0;\r\n    }\r\n  }\r\n\r\n  return { currentStreak, bestStreak };\r\n};\r\n\r\nconst Home = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [lastLog, setLastLog] = useState(null);\r\n  const [currentStreak, setCurrentStreak] = useState(0);\r\n  const [bestStreak, setBestStreak] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const storedLogs = JSON.parse(localStorage.getItem('sinLogs')) || [];\r\n    setLogs(storedLogs);\r\n    if (storedLogs.length > 0) {\r\n      setLastLog(storedLogs[0]);\r\n      const { currentStreak, bestStreak } = getStreaks(storedLogs);\r\n      setCurrentStreak(currentStreak);\r\n      setBestStreak(bestStreak);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ maxWidth: '800px', margin: '0 auto', textAlign: 'left' }}>\r\n      <h2>Dashboard</h2>\r\n      <p>Welcome back. Here's your spiritual check-in for today:</p>\r\n\r\n      <div style={{ backgroundColor: '#222', padding: '1rem', borderRadius: '8px', marginBottom: '2rem' }}>\r\n        <p><strong>🔥 Current Streak:</strong> {currentStreak} day{currentStreak !== 1 ? 's' : ''}</p>\r\n        <p><strong>🏅 Best Streak:</strong> {bestStreak} day{bestStreak !== 1 ? 's' : ''}</p>\r\n      </div>\r\n\r\n      {lastLog && (\r\n        <div style={{ marginBottom: '2rem' }}>\r\n          <h3>📝 Last Journal Entry</h3>\r\n          <p><strong>{lastLog.date} - {lastLog.sin}</strong></p>\r\n          <p><em>{lastLog.journal}</em></p>\r\n          <p style={{ color: lastLog.overcame ? 'green' : 'red' }}>\r\n            {lastLog.overcame ? '✅ Overcame' : '❌ Gave in'}\r\n          </p>\r\n          <p><strong>Verse:</strong> {lastLog.verse}</p>\r\n        </div>\r\n      )}\r\n\r\n      <h3>Quick Links</h3>\r\n      <ul>\r\n        <li><Link to=\"/sin-log\">📖 Daily Journal</Link></li>\r\n        <li><Link to=\"/todo\">🎯 Spiritual Goals</Link></li>\r\n        <li><Link to=\"/contact\">🧠 Reflection Request</Link></li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div style={{\r\n      maxWidth: '900px',\r\n      margin: '0 auto',\r\n      textAlign: 'left',\r\n      padding: '2rem',\r\n      backgroundColor: 'rgba(255, 255, 255, 0.05)',\r\n      borderRadius: '10px',\r\n      boxShadow: '0 0 15px rgba(255, 223, 186, 0.3)',\r\n      lineHeight: '1.8',\r\n    }}>\r\n      <h2 style={{ fontSize: '2rem', color: '#f39c12', marginBottom: '1.5rem' }}>\r\n        About the Spiritual Addiction Tracker\r\n      </h2>\r\n\r\n      <p style={{ marginBottom: '1.5rem' }}>\r\n        This app was created to help individuals battling spiritual addiction — not just to substances or habits,\r\n        but to destructive patterns like lust, pride, envy, wrath, gluttony, greed, and sloth.\r\n      </p>\r\n\r\n      <p style={{ marginBottom: '1.5rem' }}>\r\n        It's a safe space for reflection, growth, and restoration. Whether you’re overcoming temptation,\r\n        recovering from a fall, or striving to walk more closely with Christ, this tool supports you in:\r\n      </p>\r\n\r\n      <ul style={{ marginBottom: '1.5rem', paddingLeft: '1.5rem' }}>\r\n        <li style={{ marginBottom: '0.75rem' }}>📖 Journaling your spiritual battles and victories</li>\r\n        <li style={{ marginBottom: '0.75rem' }}>🙏 Submitting reflections and receiving Bible-based encouragement</li>\r\n        <li style={{ marginBottom: '0.75rem' }}>🎯 Setting spiritual goals like prayer, fasting, and Bible study</li>\r\n        <li style={{ marginBottom: '0.75rem' }}>📈 Tracking growth and building holy habits over time</li>\r\n      </ul>\r\n\r\n      <p style={{ marginBottom: '1.5rem' }}>\r\n        More than a habit tracker, this is a faith tool grounded in Scripture. It’s here to remind you that no matter\r\n        how far you’ve fallen, God’s grace is always greater.\r\n      </p>\r\n\r\n      <p style={{ fontStyle: 'italic', color: '#2ecc71', fontWeight: 'bold', marginBottom: '1.5rem' }}>\r\n        \"The righteous fall seven times, and rise again.\" — Proverbs 24:16\r\n      </p>\r\n\r\n      <p style={{ marginBottom: '1.5rem' }}>\r\n        This app also points to the ultimate truth: salvation is not earned by perfection — it's received by believing\r\n        in the One who is perfect.\r\n      </p>\r\n\r\n      <p style={{\r\n        fontWeight: 'bold',\r\n        fontSize: '1.2rem',\r\n        color: '#f1c40f',\r\n        fontStyle: 'italic',\r\n        marginBottom: '1.5rem',\r\n      }}>\r\n        “For God so loved the world that He gave His one and only Son, that whoever believes in Him shall not perish\r\n        but have eternal life.” — John 3:16\r\n      </p>\r\n\r\n      <p>\r\n        If you’ve never received Jesus, let this moment be your turning point. He’s not waiting for you to be perfect —\r\n        just to say yes.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst NewTaskForm = ({ taskInput, setTaskInput, addTask, placeholder }) => {\r\n  return (\r\n    <form onSubmit={addTask}>\r\n      <input\r\n        type=\"text\"\r\n        value={taskInput}\r\n        onChange={(e) => setTaskInput(e.target.value)}\r\n        placeholder={placeholder || \"Enter a new task\"}\r\n      />\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTaskForm;\r\n","import React from 'react';\r\n\r\nconst FilterButtons = ({ filter, setFilter }) => {\r\n  return (\r\n    <div>\r\n      <button onClick={() => setFilter(\"all\")} disabled={filter === \"all\"}>All</button>\r\n      <button onClick={() => setFilter(\"completed\")} disabled={filter === \"completed\"}>Completed</button>\r\n      <button onClick={() => setFilter(\"incomplete\")} disabled={filter === \"incomplete\"}>Incomplete</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterButtons;\r\n","import React from 'react';\r\n\r\nconst TaskItem = ({ task, toggleTaskCompletion, deleteTask }) => {\r\n  return (\r\n    <li>\r\n      <span\r\n        style={{ textDecoration: task.completed ? 'line-through' : 'none', cursor: 'pointer' }}\r\n        onClick={() => toggleTaskCompletion(task.id)}\r\n      >\r\n        {task.text}\r\n      </span>\r\n      <button onClick={() => deleteTask(task.id)} style={{ marginLeft: \"10px\" }}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nconst TaskList = ({ tasks, toggleTaskCompletion, deleteTask }) => {\r\n  return (\r\n    <ul>\r\n      {tasks.map(task => (\r\n        <TaskItem\r\n          key={task.id}\r\n          task={task}\r\n          toggleTaskCompletion={toggleTaskCompletion}\r\n          deleteTask={deleteTask}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport NewTaskForm from './NewTaskForm';\r\nimport FilterButtons from './FilterButtons';\r\nimport TaskList from './TaskList';\r\n\r\nconst Todo = () => {\r\n  const [goals, setGoals] = useState(() => {\r\n    const saved = localStorage.getItem(\"spiritualGoals\");\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"spiritualGoals\", JSON.stringify(goals));\r\n  }, [goals]);\r\n\r\n  const [goalInput, setGoalInput] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"all\");\r\n\r\n  const addGoal = (e) => {\r\n    e.preventDefault();\r\n    if (goalInput.trim()) {\r\n      setGoals([...goals, { id: Date.now(), text: goalInput, completed: false }]);\r\n      setGoalInput(\"\");\r\n    }\r\n  };\r\n\r\n  const toggleGoalCompletion = (id) => {\r\n    setGoals(goals.map(goal =>\r\n      goal.id === id ? { ...goal, completed: !goal.completed } : goal\r\n    ));\r\n  };\r\n\r\n  const deleteGoal = (id) => {\r\n    setGoals(goals.filter(goal => goal.id !== id));\r\n  };\r\n\r\n  const filteredGoals = goals.filter(goal => {\r\n    if (filter === \"completed\") return goal.completed;\r\n    if (filter === \"incomplete\") return !goal.completed;\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>Spiritual Goals</h2>\r\n      <p style={{ marginBottom: '1rem' }}>\r\n        Set daily goals to grow closer to God. These could include prayer, scripture reading, fasting, or service.\r\n      </p>\r\n\r\n      <FilterButtons filter={filter} setFilter={setFilter} />\r\n\r\n      <div className=\"task-container\">\r\n        <NewTaskForm\r\n          taskInput={goalInput}\r\n          setTaskInput={setGoalInput}\r\n          addTask={addGoal}\r\n          placeholder=\"Enter a spiritual goal...\"\r\n        />\r\n        <TaskList\r\n          tasks={filteredGoals}\r\n          toggleTaskCompletion={toggleGoalCompletion}\r\n          deleteTask={deleteGoal}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nconst verseMap = {\r\n  lust: {\r\n    keywords: [\"lust\", \"porn\", \"impure\", \"temptation\", \"sexual\"],\r\n    verse: \"1 John 2:16 - The lust of the flesh... comes not from the Father but from the world.\"\r\n  },\r\n  pride: {\r\n    keywords: [\"pride\", \"arrogant\", \"boast\", \"selfish\"],\r\n    verse: \"Proverbs 16:18 - Pride goes before destruction, a haughty spirit before a fall.\"\r\n  },\r\n  envy: {\r\n    keywords: [\"envy\", \"jealous\", \"comparison\", \"covet\"],\r\n    verse: \"Proverbs 14:30 - A heart at peace gives life to the body, but envy rots the bones.\"\r\n  },\r\n  wrath: {\r\n    keywords: [\"anger\", \"mad\", \"rage\", \"wrath\"],\r\n    verse: \"Ephesians 4:31 - Let all bitterness and wrath and anger be put away from you.\"\r\n  },\r\n  greed: {\r\n    keywords: [\"greed\", \"money\", \"rich\", \"materialism\"],\r\n    verse: \"Luke 12:15 - Watch out! Be on your guard against all kinds of greed...\"\r\n  },\r\n  sloth: {\r\n    keywords: [\"lazy\", \"sloth\", \"unmotivated\", \"tired\", \"procrastinate\"],\r\n    verse: \"Proverbs 13:4 - The soul of the sluggard craves and gets nothing...\"\r\n  },\r\n  gluttony: {\r\n    keywords: [\"gluttony\", \"overeat\", \"food\", \"drink\", \"binging\"],\r\n    verse: \"Proverbs 23:20–21 - Do not join those who drink too much wine or gorge themselves...\"\r\n  },\r\n  fear: {\r\n    keywords: [\"fear\", \"afraid\", \"scared\", \"worried\"],\r\n    verse: \"Isaiah 41:10 - Do not fear, for I am with you.\"\r\n  },\r\n  anxiety: {\r\n    keywords: [\"anxious\", \"stress\", \"panic\", \"anxiety\"],\r\n    verse: \"Philippians 4:6 - Do not be anxious about anything, but in every situation, by prayer and petition...\"\r\n  },\r\n  doubt: {\r\n    keywords: [\"doubt\", \"unsure\", \"confused\", \"unbelief\"],\r\n    verse: \"James 1:6 - But when you ask, you must believe and not doubt...\"\r\n  }\r\n};\r\n\r\nconst fallbackVerse = \"Psalm 34:18 - The Lord is close to the brokenhearted and saves those who are crushed in spirit.\";\r\n\r\nconst Contact = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [verse, setVerse] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const loweredMessage = message.toLowerCase();\r\n    let found = null;\r\n\r\n    for (const topic in verseMap) {\r\n      const { keywords, verse: matchedVerse } = verseMap[topic];\r\n      if (keywords.some(keyword => loweredMessage.includes(keyword))) {\r\n        found = matchedVerse;\r\n        break;\r\n      }\r\n    }\r\n\r\n    setVerse(found || fallbackVerse);\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '600px', margin: '0 auto', textAlign: 'left' }}>\r\n      <h2>Submit a Reflection</h2>\r\n      <p>Write about your current struggle, temptation, or moment of growth. You'll receive a Bible verse to encourage you.</p>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          rows=\"5\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"What are you reflecting on today?\"\r\n          required\r\n          style={{ width: '100%', padding: '1rem', fontSize: '1rem' }}\r\n        />\r\n        <button type=\"submit\" style={{ marginTop: '1rem' }}>Submit</button>\r\n      </form>\r\n\r\n      {verse && (\r\n        <div style={{ marginTop: '2rem', padding: '1rem', backgroundColor: '#222', borderRadius: '5px' }}>\r\n          <h3>Verse for You:</h3>\r\n          <p style={{ fontStyle: 'italic', color: '#f39c12' }}>{verse}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst initialSins = [\r\n  { name: 'Pride', verse: 'Proverbs 16:18 - Pride goes before destruction, a haughty spirit before a fall.', isOvercome: false },\r\n  { name: 'Envy', verse: 'James 3:16 - Where you have envy and selfish ambition, there you find disorder and every evil practice.', isOvercome: false },\r\n  { name: 'Wrath', verse: 'Ecclesiastes 7:9 - Do not be quickly provoked in your spirit, for anger resides in the lap of fools.', isOvercome: false },\r\n  { name: 'Lust', verse: '1 John 2:16 - The lust of the flesh and eyes comes not from the Father but from the world.', isOvercome: false },\r\n  { name: 'Gluttony', verse: 'Proverbs 23:20–21 - Do not join those who drink too much wine or gorge themselves on meat.', isOvercome: false },\r\n  { name: 'Greed', verse: 'Luke 12:15 - Be on your guard against all kinds of greed; life does not consist in an abundance of possessions.', isOvercome: false },\r\n  { name: 'Sloth', verse: 'Proverbs 19:15 - Laziness brings on deep sleep, and the shiftless go hungry.', isOvercome: false },\r\n];\r\n\r\nconst SevenDeadlySins = () => {\r\n  const navigate = useNavigate();\r\n  const [sins, setSins] = useState(initialSins);\r\n  const [showVerse, setShowVerse] = useState(Array(initialSins.length).fill(false));\r\n\r\n  const toggleOvercome = (index) => {\r\n    const updated = [...sins];\r\n    updated[index].isOvercome = !updated[index].isOvercome;\r\n    setSins(updated);\r\n  };\r\n\r\n  const toggleVerse = (index) => {\r\n    const updated = [...showVerse];\r\n    updated[index] = !updated[index];\r\n    setShowVerse(updated);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '1rem', maxWidth: '600px', margin: '0 auto' }}>\r\n      <h2>The Seven Deadly Sins</h2>\r\n      <p style={{ fontStyle: 'italic', marginBottom: '1rem' }}>\r\n        Tap each sin to reveal its corresponding Bible verse and track your struggle or victory.\r\n      </p>\r\n      <ul style={{ padding: 0, listStyle: 'none' }}>\r\n        {sins.map((sin, index) => (\r\n          <li key={index} style={{ marginBottom: '20px' }}>\r\n            <div>\r\n              <strong>{sin.name}</strong>\r\n              <div style={{ marginTop: '0.5rem' }}>\r\n                <button onClick={() => toggleOvercome(index)}>\r\n                  {sin.isOvercome ? 'Overcome' : 'Struggling'}\r\n                </button>\r\n                <button onClick={() => toggleVerse(index)} style={{ marginLeft: '10px' }}>\r\n                  {showVerse[index] ? 'Hide Verse' : 'Show Verse'}\r\n                </button>\r\n              </div>\r\n              {showVerse[index] && (\r\n                <p style={{ marginTop: '0.5rem', color: '#f39c12' }}>\r\n                  {sin.verse}\r\n                </p>\r\n              )}\r\n              {sin.isOvercome && (\r\n                <p style={{ color: 'green', fontStyle: 'italic', marginTop: '0.5rem' }}>\r\n                  You've overcome this sin! Keep growing in the Lord.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <button onClick={() => navigate('/')}>Back to Home</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SevenDeadlySins;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// 🔄 Bible verses for each sin\r\nconst sinVerses = {\r\n  Pride: 'Proverbs 16:18 - Pride goes before destruction, a haughty spirit before a fall.',\r\n  Envy: 'James 3:16 - For where you have envy and selfish ambition, there you find disorder...',\r\n  Wrath: 'Ecclesiastes 7:9 - Do not be quickly provoked in your spirit...',\r\n  Lust: '1 John 2:16 - The lust of the flesh... comes not from the Father but from the world.',\r\n  Gluttony: '1 Corinthians 6:19-20 - Your body is a temple of the Holy Spirit...',\r\n  Greed: 'Luke 12:15 - Be on your guard against all kinds of greed...',\r\n  Sloth: 'Proverbs 19:15 - Laziness brings on deep sleep, and the shiftless go hungry.'\r\n};\r\n\r\n// 🔢 Streak calculation\r\nconst getStreaks = (logs) => {\r\n  let currentStreak = 0;\r\n  let bestStreak = 0;\r\n  let tempStreak = 0;\r\n\r\n  for (let i = 0; i < logs.length; i++) {\r\n    if (logs[i].overcame) {\r\n      tempStreak++;\r\n      if (i === 0) currentStreak++;\r\n      bestStreak = Math.max(bestStreak, tempStreak);\r\n    } else {\r\n      if (i === 0) currentStreak = 0;\r\n      tempStreak = 0;\r\n    }\r\n  }\r\n\r\n  return { currentStreak, bestStreak };\r\n};\r\n\r\nconst SinLog = () => {\r\n  const [sin, setSin] = useState('');\r\n  const [journal, setJournal] = useState('');\r\n  const [overcame, setOvercame] = useState(false);\r\n  const [logs, setLogs] = useState(() => {\r\n    const saved = localStorage.getItem('sinLogs');\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n  const [filter, setFilter] = useState('All');\r\n\r\n  const { currentStreak, bestStreak } = getStreaks(logs);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('sinLogs', JSON.stringify(logs));\r\n  }, [logs]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (sin && journal.trim()) {\r\n      const newLog = {\r\n        id: Date.now(),\r\n        date: new Date().toLocaleDateString(),\r\n        sin,\r\n        journal,\r\n        overcame,\r\n        verse: sinVerses[sin]\r\n      };\r\n      setLogs([newLog, ...logs]);\r\n      setSin('');\r\n      setJournal('');\r\n      setOvercame(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '700px', margin: '0 auto', textAlign: 'left' }}>\r\n      <h2>Daily Sin Tracker</h2>\r\n\r\n      {/* 🔥 Streak Info */}\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        <p>🔥 <strong>Current Streak:</strong> {currentStreak} day{currentStreak !== 1 ? 's' : ''}</p>\r\n        <p>🏅 <strong>Best Streak:</strong> {bestStreak} day{bestStreak !== 1 ? 's' : ''}</p>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Sin Category:</label>\r\n        <select value={sin} onChange={(e) => setSin(e.target.value)} required>\r\n          <option value=\"\">-- Select a sin --</option>\r\n          {Object.keys(sinVerses).map((key) => (\r\n            <option key={key} value={key}>{key}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <label>Short Journal Entry:</label>\r\n        <textarea\r\n          rows=\"4\"\r\n          value={journal}\r\n          onChange={(e) => setJournal(e.target.value)}\r\n          placeholder=\"Describe what happened...\"\r\n          required\r\n        />\r\n\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={overcame}\r\n            onChange={(e) => setOvercame(e.target.checked)}\r\n          />\r\n          I overcame the temptation today\r\n        </label>\r\n\r\n        <button type=\"submit\">Log Entry</button>\r\n      </form>\r\n\r\n      <hr />\r\n\r\n      {/* Filter */}\r\n      <label>Filter by Sin:</label>\r\n      <select value={filter} onChange={(e) => setFilter(e.target.value)}>\r\n        <option value=\"All\">All</option>\r\n        {Object.keys(sinVerses).map((sin) => (\r\n          <option key={sin} value={sin}>{sin}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* History */}\r\n      <h3>My History</h3>\r\n      <ul style={{ listStyle: 'none', paddingLeft: 0 }}>\r\n        {logs\r\n          .filter(log => filter === 'All' || log.sin === filter)\r\n          .map((log) => (\r\n            <li key={log.id} style={{ marginBottom: '20px', borderBottom: '1px solid #ccc', paddingBottom: '10px' }}>\r\n              <strong>{log.date} - {log.sin}</strong>\r\n              <p><em>{log.journal}</em></p>\r\n              <p style={{ color: log.overcame ? 'green' : 'red' }}>\r\n                {log.overcame ? '✅ Overcame' : '❌ Gave in'}\r\n              </p>\r\n              <p><strong>Verse:</strong> {log.verse}</p>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SinLog;\r\n\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport './App.css';\n\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Todo from './pages/Todo';\nimport Contact from './pages/Contact';\nimport SevenDeadlySins from './pages/SevenDeadlySins';\nimport SinLog from './pages/SinLog'; // ✅ Import the new page\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1>Spiritual Addiction Tracker</h1>\n        <nav>\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/about\">About</Link></li>\n            <li><Link to=\"/todo\">Todos</Link></li>\n            <li><Link to=\"/contact\">Contact</Link></li>\n            <li><Link to=\"/seven-deadly-sins\">Seven Deadly Sins</Link></li>\n            <li><Link to=\"/sin-log\">Sin Log</Link></li> {/* ✅ Add Sin Log Link */}\n          </ul>\n        </nav>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/todo\" element={<Todo />} />\n          <Route path=\"/contact\" element={<Contact />} />\n          <Route path=\"/seven-deadly-sins\" element={<SevenDeadlySins />} />\n          <Route path=\"/sin-log\" element={<SinLog />} /> {/* ✅ SinLog route */}\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}